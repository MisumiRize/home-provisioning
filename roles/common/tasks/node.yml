- name: fetch releases of nvm
  uri: url=https://api.github.com/repos/creationix/nvm/releases return_content=yes
  register: res
  tags: nvm

- set_fact: tag_name={{ res['json'][0]['tag_name'] }}
  tags: nvm

- name: clone nvm
  git: repo=https://github.com/creationix/nvm.git dest=/usr/local/nvm version={{ tag_name }}
  tags: nvm

- name: setup nvm
  copy: src=files/bash.bashrc dest=/etc/bash.bashrc
  tags: nvm

- name: install node shim
  copy: src=files/node dest=/usr/local/bin/node mode=0755
  tags: nvm

- name: install npm shim
  copy: src=files/npm dest=/usr/local/bin/npm mode=0755
  tags: nvm

- name: "check node v{{ node_version }} exists"
  stat: "path=/usr/local/nvm/versions/node/v{{ node_version }}"
  register: n
  tags: node

- name: "download node v{{ node_version }}"
  unarchive:
    src: "https://nodejs.org/dist/v{{ node_version }}/node-v{{ node_version }}-linux-armv7l.tar.xz"
    dest: /tmp
    copy: no
  when: n.stat.isdir is not defined
  tags: node

- name: "move node v{{ node_version }}"
  synchronize:
    src: "/tmp/node-v{{ node_version }}-linux-armv7l/"
    dest: "/usr/local/nvm/versions/node/v{{ node_version }}"
  delegate_to: "{{ inventory_hostname }}"
  when: n.stat.isdir is not defined
  tags: node

- name: "set node v{{ node_version }} as default"
  template: src=templates/default dest=/usr/local/nvm/alias/default
  tags: node
